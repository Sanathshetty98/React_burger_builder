import React, { Component } from 'react';
import { render } from 'react-dom';
import Hello from './Hello';
import './style.css';
import Chart from "chart.js";
class App extends Component {
  constructor() {
    super();
    this.state = {
      name: 'React'
    };
  }
   chartRef = React.createRef();
    
    componentDidMount() {
        const myChartRef = this.chartRef.current.getContext("2d");
        
        new Chart(myChartRef, {
            type: "pie",
            data: {
                //Bring in data
                labels: ["Jan", "Feb", "March"],
                datasets: [
                    {
                        backgroundColor: [
                          "#2ecc71",
                          "#3498db",
                          "#95a5a6",
                          "#9b59b6",
                          "#f1c40f",
                          "#e74c3c",
                          "#34495e"
                        ],
                        label: "Sales",
                        data: [86, 67, 91],
                    }
                ]
            },
            options: {
            legend: {
              display: false
              }
            }
        });
    }
    render() {
        return (
            <div>
                <canvas
                    id="myChart"	
                    ref={this.chartRef}
                />
            </div>
        )
    }
}

render(<App />, document.getElementById('root'));


//npm install --save react-chartjs-2 chart.js

//npm install chart.js --save





















// prev


var calculateDelivery = () =>{
            //console.log(this.props)
            var data = this.props.order.map( order => {
                //   if(order.orderData.deliveryMethod ==='Fastest')
                //   {
                //       countf = countf + 1;
                //   }
                //   else
                //   {
                //       countc = countc + 1;
                //   }
                var data;
                if(order.orderData.deliveryMethod === 'Fastest'){
                    data = {title: order.orderData.deliveryMethod, value: 1, color: '#E38627'}
                }
                else{
                    data = {title: order.orderData.deliveryMethod, value: 1, color: '#0000cc'}
                }
                return data;
              })
            //   console.log(countc, countf)
            // if(type === 'fast'){
            //     return countf;
            // }
            
              
            // else if(type === 'cheap'){
            //     return countc;  
            // }

            // var calcCountry = () => {
            //    this.props.order.map( order => {
            //             obj = {
            //                 name : order.orderData.country,
            //                 count : 1
            //             }
            //     })
            // }
        // this.setState({countc : calculateDelivery('cheap')});
        // this.setState({countf : calculateDelivery('fast')});
        console.log(data);
        data.sort((a,b) => a.title.localeCompare(b.title));
        return data;
       }
       var calcCountry = () =>{
        var data = this.props.order.map( order => {
            var data;
            if(order.orderData.country === 'India'){
                data = {title: order.orderData.country, value: 1, color: '#E38627'}
            }
            else if(order.orderData.country === 'USA'){
                data = {title: order.orderData.country, value: 1, color: '#00cc00'}
            }
            else{
                data = {title: order.orderData.country, value: 1, color: '#0000cc'}
            }
            return data;
          })
          data.sort((a,b) => a.title.localeCompare(b.title));
          return data;
       }